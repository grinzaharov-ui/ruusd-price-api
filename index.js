const express = require('express');
const cors = require('cors');
const app = express();
const PORT = 3000;

// –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–∫—É–¥–∞ —É–≥–æ–¥–Ω–æ
app.use(cors());
app.use(express.json());

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞—à–µ–≥–æ —Ç–æ–∫–µ–Ω–∞ RuUSD
const TOKEN_CONFIG = {
  name: "Russian USD",
  symbol: "RuUSD", 
  fixedPriceUSD: 1.00
};

// üìå –ì–ª–∞–≤–Ω—ã–π endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã
app.get('/api/price', (req, res) => {
  const response = {
    "ruusd": {
      "usd": 1.00,
      "last_updated_at": Math.floor(Date.now() / 1000)
    }
  };
  console.log('‚úÖ –ö—Ç–æ-—Ç–æ –∑–∞–ø—Ä–æ—Å–∏–ª —Ü–µ–Ω—É RuUSD');
  res.json(response);
});

// üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—à–µ–º —Ç–æ–∫–µ–Ω–µ
app.get('/api/token-info', (req, res) => {
  res.json({
    "name": "Russian USD",
    "symbol": "RuUSD",
    "price": "1.00 USD",
    "contract_address": "0x0B4CCd0b877Df039e295Fd52533c14EF151D223d",
    "chain": "Polygon Mainnet"
  });
});

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
app.get('/health', (req, res) => {
  res.json({ 
    "status": "OK", 
    "message": "RuUSD API —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!",
    "timestamp": new Date().toISOString()
  });
});

// üìå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.send(`
    <h1>üí∞ RuUSD Price API</h1>
    <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç API –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ü–µ–Ω—É —Ç–æ–∫–µ–Ω–∞ RuUSD.</p>
    <p><strong>–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: 1 RuUSD = 1.00 USD</strong></p>
    <h3>–î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:</h3>
    <ul>
      <li><a href="/api/price">/api/price</a> - –ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É</li>
      <li><a href="/api/token-info">/api/token-info</a> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–µ</li>
      <li><a href="/health">/health</a> - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞</li>
    </ul>
  `);
});

// üìå –ö–∞—Å—Ç–æ–º–Ω—ã–π RPC endpoint –¥–ª—è –∫–æ—à–µ–ª—å–∫–æ–≤
app.get('/api/rpc-price', (req, res) => {
  try {
    const response = {
      "jsonrpc": "2.0",
      "id": 1,
      "result": {
        "ruusd": {
          "usd": 1.00,
          "price": "1000000000000000000", // 1.00 –≤ wei (18 decimals)
          "timestamp": Math.floor(Date.now() / 1000),
          "source": "official_oracle",
          "contract_address": "0x0B4CCd0b877Df039e295Fd52533c14EF151D223d",
          "network": "Polygon Mainnet"
        }
      }
    };
    console.log('‚úÖ RPC price request served');
    res.status(200).json(response);
  } catch (error) {
    console.error('‚ùå RPC endpoint error:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});

// üìå Endpoint –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–∞
app.get('/api/token-metadata', (req, res) => {
  res.json({
    "name": "Russian USD",
    "symbol": "RUUSD",
    "decimals": 18,
    "address": "0x0B4CCd0b877Df039e295Fd52533c14EF151D223d",
    "official_price": 1.00,
    "price_source": "https://ruusd-price-api.onrender.com/api/rpc-price",
    "network": "Polygon Mainnet",
    "website": "https://your-project.com", // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Å–∞–π—Ç
    "description": "Stablecoin pegged to 1 USD"
  });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
  console.log('üéâ RuUSD Price API –∑–∞–ø—É—â–µ–Ω!');
  console.log('üìç –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É: ' + PORT);
  console.log('üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
  console.log('   ‚Üí http://localhost:' + PORT);
  console.log('   ‚Üí http://localhost:' + PORT + '/api/price');
  console.log('   ‚Üí http://localhost:' + PORT + '/health');
});